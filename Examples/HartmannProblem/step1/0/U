/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


Uinlet          (Uin_var 0 0);

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (Uin_var 0 0);

boundaryField
{
    outlet
    {
        type            pressureInletOutletVelocity;
        value           uniform $Uinlet;
    }
    inlet
    {
		type            fixedValue;
        value           #codeStream
		{
			codeInclude
			#{
				#include "fvCFD.H"
			#};
			
			codeOptions
			#{
				-I$(LIB_SRC)/finiteVolume/lnInclude \
				-I$(LIB_SRC)/meshTools/lnInclude
			#};
			
			codeLibs
			#{
				-lmeshTools \
				-lfiniteVolume
			#};
			
			code
			#{
				const IOdictionary& d = static_cast<const IOdictionary&>
				(
					dict.parent().parent()
				);
				
				const fvMesh& mesh = refCast<const fvMesh>(d.db());
				const label id = mesh.boundary().findPatchID("inlet");
				const fvPatch& patch = mesh.boundary()[id];
				
				vectorField U(patch.size(), vector(0, 0, 0));
				
				const scalar U_max = Uin_var/0.64; //patch center


				
				forAll(U, i) 
				{
					const scalar y = patch.Cf()[i][1]; // 0 is x; 1 is y and 2 is z 
					const scalar z = patch.Cf()[i][2]; // 0 is x; 1 is y and 2 is z 
					U[i] = vector(U_max*(1-(pow(y,6)))*(1-(pow(z,6))), 0., 0.);
	
				}
				
				U.writeEntry("", os);
			#};
		};
    }
    ".*"
    {
        type            noSlip;
    }
}


// ************************************************************************* //
